package dogwin.net.check;import org.json.JSONException;import org.json.JSONObject;import android.annotation.SuppressLint;import android.annotation.TargetApi;import android.app.Activity;import android.app.Notification;import android.app.NotificationManager;import android.app.PendingIntent;import android.content.BroadcastReceiver;import android.content.Context;import android.content.Intent;import android.content.IntentFilter;import android.content.SharedPreferences;import android.net.ConnectivityManager;import android.os.Build;import android.os.Bundle;import android.preference.EditTextPreference;import android.util.Log;import android.view.Menu;import android.view.MenuInflater;import android.view.MenuItem;import android.view.View;import android.widget.Button;import android.widget.CheckBox;import android.widget.EditText;import android.widget.Toast;import dogwin.net.apps.Buddha;import dogwin.net.apps.R;import dogwin.net.publics.Menus;public class Login extends Activity{		DwClient dwClient;// 	public boolean IconFlag=true,flag;	Button loginbt,registerbt;	EditText username,password;	public String unstr,pwstr;	public String namenull,passwordnull,logerror;		public EditTextPreference editText;	public SharedPreferences preferences;		CheckBox keeplogin;	//check sharepreferences	static String uc_username,uc_password;	static boolean uc_flag;	int pid;	Menus menus = new Menus();		@Override	protected void onCreate(Bundle savedInstanceState) {		// TODO Auto-generated method stub		super.onCreate(savedInstanceState);		setContentView(R.layout.login);		loginbt = (Button)this.findViewById(R.id.loginbt);		registerbt = (Button)this.findViewById(R.id.registerbt);		username = (EditText)this.findViewById(R.id.username);		password = (EditText)this.findViewById(R.id.password);				//error message		namenull = getResources().getText(R.string.namenull).toString();		passwordnull = getResources().getText(R.string.passwordnull).toString();		logerror = getResources().getText(R.string.logerror).toString();		keeplogin = (CheckBox)this.findViewById(R.id.keeplogin);				uc_username = Rt_username();		uc_password = Rt_password();		uc_flag = Rt_flag();		this.pid = android.os.Process.myPid();		//login check 		loginbt.setOnClickListener(new View.OnClickListener() {						@Override			public void onClick(View v) {				// TODO Auto-generated method stub				unstr = username.getText().toString();				pwstr = password.getText().toString();				dwClient = new DwClient(unstr, pwstr);				if(unstr.equals("")){					Toast.makeText(Login.this, namenull, Toast.LENGTH_LONG).show();				}else if(pwstr.equals("")){					Toast.makeText(Login.this, passwordnull, Toast.LENGTH_LONG).show();				}else{					//Toast.makeText(Login.this, "come on man success go go", Toast.LENGTH_LONG).show();					IntentFilter mFilter = new IntentFilter();  			        mFilter.addAction(ConnectivityManager.CONNECTIVITY_ACTION);  			        registerReceiver(loginReceiver, mFilter); 			        				}			}		});	}	//login check 	private BroadcastReceiver loginReceiver = new BroadcastReceiver() {				@Override		public void onReceive(Context context, Intent intent) {			// TODO Auto-generated method stub			String loginurl = getResources().getString(R.string.loginurl);			JSONParser jParser = new JSONParser(context);			// getting JSON string from URL			 JSONObject json = jParser.getJSONFromUrl(loginurl+"?username="+unstr+"&password="+pwstr);			 System.out.println("json=>"+json);			 try {				boolean flag = json.getBoolean("Flag");				System.out.println("return flag=>"+flag);				DwClient.flag = flag;								// go to buddha 				if(flag){					//set data										Intent buIntent = new Intent(Login.this,Buddha.class);					startActivity(buIntent);					IconFlag = false;										//set share					if(keeplogin.isChecked()){						SaveUC(unstr, pwstr, flag);					}					Login.this.finish();					//Login.this.finish();					unregisterReceiver(loginReceiver);				}else{					Toast.makeText(Login.this, logerror, Toast.LENGTH_LONG).show();				}			} catch (JSONException e) {				// TODO Auto-generated catch block				e.printStackTrace();			}			System.out.println("set flag=>"+DwClient.flag);		}	};		@Override	public boolean onCreateOptionsMenu(Menu menu) {		MenuInflater inflater = new MenuInflater(this);		if(DwClient.flag||uc_flag){			inflater.inflate(R.menu.menu_option_main, menu);		}else{			inflater.inflate(R.menu.menu_unlogin, menu);		}		return super.onCreateOptionsMenu(menu);			}	@Override	public boolean onOptionsItemSelected(MenuItem item) {		boolean menu_flag = false;		IconFlag = false;		if(DwClient.flag||uc_flag){			menu_flag = true;		}		return super.onOptionsItemSelected(menus.select_menus(item, Login.this, pid, menu_flag));	}		@Override	protected void onStop() {		// TODO Auto-generated method stub		super.onStop();		Log.v("TAG", "back Run");		if(IconFlag){			createNotification();		}	}	@Override	protected void onRestart() {		// TODO Auto-generated method stub		super.onRestart();		IconFlag = false;	}		@TargetApi(Build.VERSION_CODES.JELLY_BEAN)	@SuppressLint("NewApi")	public void createNotification(){		Intent intent = new Intent(this, Login.class);		PendingIntent pIntent = PendingIntent.getActivity(this, 0, intent, 0);		//title		String title = getResources().getString(R.string.app_name);		String subject = getResources().getString(R.string.subject);				Notification noti = new Notification.Builder(this)        .setContentTitle(title)        .setContentText(subject).setSmallIcon(R.drawable.ic_launcher)        .setContentIntent(pIntent).build();		 NotificationManager notificationManager = (NotificationManager) getSystemService(NOTIFICATION_SERVICE);		    // Hide the notification after its selected		 noti.flags |= Notification.FLAG_AUTO_CANCEL;		 notificationManager.notify(0, noti);	}		public void SaveUC(String username,String password,boolean flag) {	    preferences = getSharedPreferences("usercurrent", Activity.MODE_PRIVATE);	    SharedPreferences.Editor preferencesEditor = preferences.edit();	    preferencesEditor.putString("username", username);	    preferencesEditor.putString("password", password);	    preferencesEditor.putBoolean("flag", flag);	    preferencesEditor.commit();	}	public String Rt_username(){		preferences = getSharedPreferences("usercurrent", Activity.MODE_PRIVATE);	    return preferences.getString("username", null);	}			public String Rt_password(){		preferences = getSharedPreferences("usercurrent", Activity.MODE_PRIVATE);	    return preferences.getString("password", null);	}		public boolean Rt_flag(){		preferences = getSharedPreferences("usercurrent", Activity.MODE_PRIVATE);		return preferences.getBoolean("flag", false);	}}