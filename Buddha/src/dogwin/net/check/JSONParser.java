package dogwin.net.check;import java.io.BufferedReader;import java.io.IOException;import java.io.InputStream;import java.io.InputStreamReader;import java.io.UnsupportedEncodingException;import java.util.concurrent.ExecutionException;import org.apache.http.HttpEntity;import org.apache.http.HttpResponse;import org.apache.http.client.ClientProtocolException;import org.apache.http.client.methods.HttpPost;import org.apache.http.impl.client.DefaultHttpClient;import org.json.JSONException;import org.json.JSONObject;import android.content.Context;import android.os.AsyncTask;import android.util.Log;public class JSONParser {	public static InputStream is = null;	public static JSONObject jObj = null;	public static String json = "";	Context ctx;		// constructor	public JSONParser(Context ctx) {	    this.ctx = ctx;	}		public void Rt_Re(JSONObject jin){		//System.out.println("jin=>"+jin);		jObj = jin;			}		public JSONObject getJSONFromUrl(String url) {			    AsyncjSONTask task = new AsyncjSONTask();		    try {			jObj = task.execute(url).get();			//System.out.println("jObj=>"+jObj);		} catch (InterruptedException e) {			// TODO Auto-generated catch block			e.printStackTrace();		} catch (ExecutionException e) {			// TODO Auto-generated catch block			e.printStackTrace();		}	    	    //System.out.println("vvvv==>jObj=>"+jObj);	    return jObj;		}			private class AsyncjSONTask extends AsyncTask<String, Void, JSONObject>{				    @Override	    protected JSONObject doInBackground(String... params) {		        String url = params[0];	        //System.out.println("url=>"+url);	        InputStream is = null;	        // Making HTTP request	                try {	                    // defaultHttpClient	                    DefaultHttpClient httpClient = new DefaultHttpClient();	                    HttpPost httpPost = new HttpPost(url);		                    HttpResponse httpResponse = httpClient.execute(httpPost);	                    HttpEntity httpEntity = httpResponse.getEntity();	                    is = httpEntity.getContent();           	                    //System.out.println("is=>"+is);	                } catch (UnsupportedEncodingException e) {	                    e.printStackTrace();	                } catch (ClientProtocolException e) {	                    e.printStackTrace();	                } catch (IOException e) {	                    e.printStackTrace();	                }	                JSONObject jObjOut = null;	                try {	                    BufferedReader reader = new BufferedReader(new InputStreamReader(is, "iso-8859-1"), 8);	                    //System.out.println("reader=>"+reader);	                    StringBuilder sb = new StringBuilder();	                    String line = null;	                    while ((line = reader.readLine()) != null) {	                        sb.append(line + "\n");	                    }	                    is.close();	                    json = sb.toString();	                    //System.out.println("json=>"+json);	                } catch (Exception e) {	                    Log.e("Buffer Error", "Error converting result " + e.toString());	                }		                // try parse the string to a JSON object	                try {	                    jObjOut = new JSONObject(json);	                    //System.out.println("jObjOut=>"+jObjOut);		                } catch (JSONException e) {	                    Log.e("JSON Parser", "Error parsing data " + e.toString());	                }	        return jObjOut;	    }	    	    	    @Override	    protected void onPostExecute(JSONObject jObjIn) {	    	//jObj = jObjIn;	    	super.onPostExecute(jObjIn);	    }	    	}}